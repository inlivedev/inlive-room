steps:
  - name: node:18.16.1
    entrypoint: npm
    args:
      - install

  - name: node:18.16.1
    entrypoint: npm
    args:
      - run
      - create:env
    env:
      - NEXT_PUBLIC_APP_ENV=${_NEXT_PUBLIC_APP_ENV}
      - NEXT_PUBLIC_APP_ORIGIN=${_NEXT_PUBLIC_APP_ORIGIN}
      - NEXT_PUBLIC_INLIVE_HUB_ORIGIN=${_NEXT_PUBLIC_INLIVE_HUB_ORIGIN}
      - NEXT_PUBLIC_INLIVE_HUB_VERSION=${_NEXT_PUBLIC_INLIVE_HUB_VERSION}
      - NEXT_PUBLIC_INLIVE_API_ORIGIN=${_NEXT_PUBLIC_INLIVE_API_ORIGIN}
      - NEXT_PUBLIC_INLIVE_API_VERSION=${_NEXT_PUBLIC_INLIVE_API_VERSION}
      - NEXT_PUBLIC_MIXPANEL_TOKEN=${_NEXT_PUBLIC_MIXPANEL_TOKEN}
      - NEXT_PUBLIC_SENTRY_DSN=${_NEXT_PUBLIC_SENTRY_DSN}
      - PERSISTENT_DATA=true
    secretEnv: ['DB_HOST','DB_NAME','DB_PASS','DB_USER']


  # Build the container image
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}:$SHORT_SHA
      - -t
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}:latest
      - .
      - --cache-from
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}:latest
      - -f
      - Dockerfile

  # Push the container image to Container Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}:$SHORT_SHA
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}:latest

  # Deploy container image to Cloud Run
  - name: gcr.io/cloud-builders/gcloud
    args:
      - run
      - deploy
      - ${_SERVICE_NAME}
      - --image
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}:$SHORT_SHA
      - --region
      - ${_REGION}
      - --allow-unauthenticated
    

images:
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}:$SHORT_SHA
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE_NAME}:latest

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/ROOM_PROD_DB_HOST/versions/latest
    env: 'DB_HOST'
  - versionName: projects/$PROJECT_ID/secrets/ROOM_PROD_DB_NAME/versions/latest
    env: 'DB_NAME'
  - versionName: projects/$PROJECT_ID/secrets/ROOM_PROD_DB_PASS/versions/latest
    env: 'DB_PASS'
  - versionName: projects/$PROJECT_ID/secrets/ROOM_PROD_DB_USER/versions/latest
    env: 'DB_USER'
